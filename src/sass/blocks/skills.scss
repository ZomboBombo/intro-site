@use "../system/vars" as *;
@use "../system/mixins" as *;

:root {
  --skill-point-col-primary--every-1: hsl(9 100% 63.9% / 0.25);
  --skill-point-col-contrast--every-1: hsl(9 100% 63.9%);

  --skill-point-col-primary--every-2: hsl(33 100% 50% / 0.25);
  --skill-point-col-contrast--every-2: hsl(33 100% 50%);

  --skill-point-col-primary--every-3: hsl(51 100% 50% / 0.25);
  --skill-point-col-contrast--every-3: hsl(51 100% 50%);

  --skill-point-col-primary--every-4: hsl(84 100% 59.2% / 0.25);
  --skill-point-col-contrast--every-4: hsl(84 100% 59.2%);

  --skill-point-col-primary--every-5: hsl(195 100% 50% / 0.25);
  --skill-point-col-contrast--every-5: hsl(195 100% 50%);

  --skill-point-col-primary--every-6: hsl(203 92% 75.5% / 0.25);
  --skill-point-col-contrast--every-6: hsl(203 92% 75.5%);

  --skill-point-col-primary--every-7: hsl(300 100% 50% / 0.25);
  --skill-point-col-contrast--every-7: hsl(300 100% 50%);
}

.skills {
  $skill-def-inner-value: 2.4rem;

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: $skill-def-inner-value;
  width: 100%;
  margin: 0;
  padding: {
    right: $skill-def-inner-value;
    left: $skill-def-inner-value;
  };

  &__skill {
    $skill-perspective-depth: 500rem;
    $skill-perspective-depth--fullwidth:
      calc(
        ($skill-perspective-depth * 3) + ($skill-def-inner-value * 2)
      );

    position: relative;
    transform-style: preserve-3d;
    transform:
      perspective($skill-perspective-depth)
      rotateY(var(--card-tilt-ancle-Y))
      rotateX(var(--card-tilt-ancle-X));
    display: flex;
    flex-direction: column;
    width: 100%;
    min-width: min-content;
    height: 100%;
    margin: 0;
    padding: 0;
    border: {
      width: 2px;
      style: solid;
      color: var(--color-def-white);
      radius: $skill-def-inner-value;
    };
    $trans-props: transform, border-radius;
    @include trans-config($trans-props, 0.125s);

    &--is-fullwidth {
      transform:
        perspective($skill-perspective-depth--fullwidth)
        rotateY(var(--card-tilt-ancle-Y))
        rotateX(var(--card-tilt-ancle-X));
      grid-column: {
        start: 1;
        end: -1;
      };
    }
  }

  &__skill-name {
    position: relative;
    transform-style: preserve-3d;
    transform:
      perspective(100rem);
    display: flex;
    justify-content: center;
    align-items: center;
    height: auto;
    min-height: 18rem;
    margin: 0;
    padding: 1.2rem;
    font: {
      size: 6.8rem;
      weight: 700;
    };
    line-height: 1;
    color: var(--ui-primary);
    background-color: var(--ui-bg-secondary);
    border: {
      top-left-radius: $skill-def-inner-value;
      top-right-radius: $skill-def-inner-value;
      bottom: 1px solid var(--color-def-white);
    };

    &::after {
      content: attr(value);
      position: absolute;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      transform: translateZ(0.75rem);
      display: block;
      width: 100%;
      height: auto;
      text-align: center;
      color: var(--color-def-white);
    }
  }

  &__skill-points-list {
    transform-style: preserve-3d;
    display: flex;
    flex-wrap: wrap;
    gap: 1.2rem;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 1.2rem;
    background-color: var(--ui-bg-primary--translucent);
    border: {
      bottom-left-radius: $skill-def-inner-value;
      bottom-right-radius: $skill-def-inner-value;
    };
  }

  &__skill-point {
    $skill-point-gap--vertical: 1.2rem;
    $skill-point-gap--horizontal: calc( $skill-point-gap--vertical * 2 );
    $skill-point-brd-radius: calc( $skill-point-gap--vertical * 4 );

    position: relative;
    transform-style: preserve-3d;
    transform:
      perspective(200rem);
    border-radius: $skill-point-brd-radius;

    & [data-skill-point-value] {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0;
      padding:
        $skill-point-gap--vertical
        $skill-point-gap--horizontal;
      font: {
        size: 3.2rem;
        weight: 400;
      };
      line-height: 1;
      border: {
        width: 1px;
        style: solid;
        radius: $skill-point-brd-radius;
      };
    }

    & [data-skill-point-value="background"] {
      border-color: var(--ui-primary);
    }

    & [data-skill-point-value="foreground"] {
      position: absolute;
      inset: 0;
      transform: translateZ(0.75rem);
      color: var(--color-def-white);
      border-color: var(--color-def-white);
    }

    /**
    * Skill-Points colorization
    */
    &:nth-child(7n - 6) {
      background-color: var(--skill-point-col-primary--every-1);

      & [data-skill-point-value="foreground"] {
        color: var(--skill-point-col-contrast--every-1);
        border-color: var(--skill-point-col-contrast--every-1);
      }
    }

    &:nth-child(7n - 5) {
      background-color: var(--skill-point-col-primary--every-2);

      & [data-skill-point-value="foreground"] {
        color: var(--skill-point-col-contrast--every-2);
        border-color: var(--skill-point-col-contrast--every-2);
      }
    }

    &:nth-child(7n - 4) {
      background-color: var(--skill-point-col-primary--every-3);

      & [data-skill-point-value="foreground"] {
        color: var(--skill-point-col-contrast--every-3);
        border-color: var(--skill-point-col-contrast--every-3);
      }
    }

    &:nth-child(7n - 3) {
      background-color: var(--skill-point-col-primary--every-4);

      & [data-skill-point-value="foreground"] {
        color: var(--skill-point-col-contrast--every-4);
        border-color: var(--skill-point-col-contrast--every-4);
      }
    }

    &:nth-child(7n - 2) {
      background-color: var(--skill-point-col-primary--every-5);

      & [data-skill-point-value="foreground"] {
        color: var(--skill-point-col-contrast--every-5);
        border-color: var(--skill-point-col-contrast--every-5);
      }
    }

    &:nth-child(7n - 1) {
      background-color: var(--skill-point-col-primary--every-6);

      & [data-skill-point-value="foreground"] {
        color: var(--skill-point-col-contrast--every-6);
        border-color: var(--skill-point-col-contrast--every-6);
      }
    }

    &:nth-child(7n) {
      background-color: var(--skill-point-col-primary--every-7);

      & [data-skill-point-value="foreground"] {
        color: var(--skill-point-col-contrast--every-7);
        border-color: var(--skill-point-col-contrast--every-7);
      }
    }
  }
}
